[package]  # help on keys doc.rust-lang.org/cargo/reference/manifest.html
name   	= "winGetConst"
version	= "0.1.0"
authors	= ["{{authors}}"]
edition	= "2021"
build  	= "build.rs"

[workspace]
members = ["helper"]	# relative to the workspace root
exclude = ["test_crates/pub_module_level_const_missing"]

[[bin]]
name	= "winGetConst"
path	= "src/winGetConst.bin.rs"

[lib]
name      	= "winGetConst_lib"
path      	= "src/winGetConst.lib.rs"
crate-type	= ['lib','cdylib']

[dependencies]
helper             	= {path="helper"}
log                	= "0.4"
stderrlog          	= "0.5"
anyhow             	= "1.0"
faccess            	= "0.2"
trustfall_rustdoc  	= "0.13.1"
trustfall          	= "0.6.1"
serde              	= "1.0.188"
cargo-semver-checks	= "0.23.0"
ron                	= "0.8.1"
lazy_static        	= "1.4.0"
# Data types
# tinyvec = {version="1.6.0",features=["rustc_1_40 ","cargo"]} # safe, panics on overflow
  # ArrayVec : array-backed storage like vec (push/pop)
  # SliceVec : vec-like backed by your slice

[build-dependencies]
log	= "0.4"

[profile.release]
strip        	= true   	# Auto strip symbols from the binary (included by default on Linux/macOS)
opt-level    	= 3      	# |3|     s=size, z=size+
lto          	= true   	# |false| Sets link-time optimization.
codegen-units	= 1      	# |16|    reduce parallel code generation
panic        	= "abort"	# |unwind| save ~20k w/o drop-on-panic cleanup and std::panic::catch_unwind

# Overrides doc.rust-lang.org/nightly/cargo/reference/profiles.html#overrides
[profile.dev.package."*"] # build dependencies in release mode to make the main app faster
opt-level       	= 3	# |3|     s=size, z=size+
codegen-units   	= 16
debug-assertions	= true
overflow-checks 	= true
# panic/lto/rpath can't be overriden

[profile.dev.build-override] # build scripts and proc-macros
opt-level	= 3	# |3|     s=size, z=size+
